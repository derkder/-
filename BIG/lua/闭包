简单来说就是：对于一个函数，能够访问到外部函数的非全局变量的一种机制。


-例子：
function func1 ()
    local x = 1
    -- 定义一个内部函数
    function func2 ()
        print(x)
    end
    -- 执行这个内部函数
    func2()
end
func1()
这个例子就是在外部调用了func1函数，而func1中定义了一个func2函数并调用了它。我们可以看到，func2访问了属于func1的local变量x，并且访问成功了。
按道理来讲，x并不是全局函数，也不是func2的局部函数，应该是访问不到的。而lua却做到了，lua把实现这个功能的方式定义为闭包。
所以从理论上来讲，lua只有闭包没有函数，函数只是不需要调用外部变量的一个闭包的特例
