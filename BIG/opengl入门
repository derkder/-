https://learnopengl-cn.github.io/intro/

https://blog.csdn.net/xiangzhihong8/article/details/84776943
//基础知识
//纹理
//光照和材质

//  main.cpp
//  opengl_progress_struct
 
#include <GLUT/GLUT.h>
#include <OpenGL/OpenGL.h>
 
// 初始化参数
void init() {
    glClearColor(0.1, 0.1, 0.4, 0.0);
    glShadeModel(GL_SMOOTH);
}
 
// 绘图回调函数
void display() {

    // 清除之前帧数据
    glClear(GL_COLOR_BUFFER_BIT);
 
    // 绘制三角形
    glBegin(GL_TRIANGLES);
    glColor3f(1, 0, 0);
    glVertex3f(-1, -1, -5);
    glColor3f(0, 1, 0);
    glVertex3f(1, -1, -5);
    glColor3f(0, 0, 1);
    glVertex3f(0, 1, -5);
    glEnd();
    // 执行绘图命令
    glFlush();
}
 
// 窗口大小变化回调函数
void reshape(int w, int h) {
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(60.0, (GLfloat)w/(GLfloat)h, 0.1, 100000.0);
    glMatrixMode(GL_MODELVIEW);
    glLoadIdentity();
}

int main(int argc, const char* argv[]) {
    // 初始化显示模式
    glutInit(&argc, const_cast<char**>(argv));
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);

    // 初始化窗口
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow(argv[0]);

    init();//初始化参数
    glutReshapeFunc(reshape);//reshape为窗口大小变化回调函数
    glutDisplayFunc(display);//display为绘图回调函数，其中调用了各个图元（glBegin(GL_POINTS);glEnd()）的绘制函数 DrawMyObjects

    // 开始主循环绘制
    glutMainLoop();
    return 0;
}


