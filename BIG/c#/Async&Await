https://zhuanlan.zhihu.com/p/463340854
Async方法在执行的时候，开始是以同步的方式执行（即在调用方的thread里跑的），直到遇到await关键字，从await关键字开始，C#会另起一个thread来执行await后面的代码。(如果Async方法里面的代码没有包含await的代码会怎么样？那整个函数就会同步执行，跟普通函数没差别。编译器也会给你个警告。)

上面用泡茶的例子来解析，简单拆解为3个步骤：准备茶叶，烧开始，洗杯子，三个步骤在Main函数都是并行的，最后等待三者的结果
可以看到PrepareteaAsync(), PrepareHotWaterAsync(), PrepareCupAsync() 三个函数的第一行log都是在thread ID为1的进程打印的，而后面的部分都是在各自的子线程里打印出来的。理解这点很重要。
在三个异步线程启动完成后，我们还需要等待返回结果。如果这个时候主线程退出的话，那子线程也会随之退出的。在刚开始写Console Application的测试code我就遇到这个问题，刚开始还加sleep来等，或者干脆写个ReadKey()等，其实用GetAwaiter()才是正解。


和写成相比，这个都开了个协程，而且会有返回值，主线程里面可以等直到子线程里返回了结构
