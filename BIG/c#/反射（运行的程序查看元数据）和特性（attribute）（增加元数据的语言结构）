元数据与反射：
程序是用来处理数据的，文本和特性都是数据；而程序本身（类的定义和BLC中类）这些也都是数据。
有关程序以及其类型的数据被称为元数据（metadata），他们保存在程序的程序集中。
程序在运行时，可以查看其它程序集或其本身的元数据。一个运行的程序查看本身的元数据或者其它程序集的元数据的行为称为反射。


特性
特性（attribute），是一种允许我们向程序的程序集增加元数据的语言结构。它是用于保存程序结构信息的某种特殊类型的类。
我们将应用了特性的程序结构叫做目标。
设计用来获取和使用元数据的程序（对象浏览器）叫做特性的消费者。
.NET预定了很多特性，我们也可以声明自定义特性。



反射：
可以使用反射动态创建类型的实例，将类型绑定到现有对象，或从现有对象获取类型并调用其方法或访问其字段和属性。如果代码中使用了特性，可以利用反射对它们进行访问。
通过反射，可以在运行时获得程序或程序集中每一个类型（包括类、结构、委托、接口和枚举等）的成员和成员的信息。
反射用到的主要类:
System.Type 类－－通过这个类可以访问任何给定数据类型的信息。
System.Reflection.Assembly 类－－它可以用于访问给定程序集的信息，或者把这个程序集加载到程序中。


